service: auto-remediate

custom:
  company: servian                  # change to your company name
  region: ap-southeast-2
  log_level: INFO                   # change to DEBUG for dev/test

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: ${self:custom.region}     # change to your region
  profile: saml                     # change to your profile  
  tracing:
    lambda: true

package:
  individually: true
  exclude:
    - node_modules/**
    - .DS_Store

functions:
  AutoRemediate:
    handler: auto-remediate.lambda_handler.lambda_handler
    name: auto-remediate-${self:provider.stage}
    description: Auto Remediate fixes common AWS security violations
    memorySize: 128
    timeout: 300
    package:
      exclude:
        - auto-remediate-dlq/**
        - auto-remediate-setup/**
    environment:
      LOGLEVEL: ${self:custom.log_level}
      PYTHONPATH: "/var/task/auto-remediate:/var/task/dynamodb_json:/var/runtime"
      SETTINGSTABLE: auto-remediate-settings-${self:provider.stage}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Scan
        Resource: "*"
      - Effect: Allow
        Action:
          - ec2:RevokeSecurityGroupIngress
          - rds:DescribeDBInstances
          - rds:ModifyDBInstance
        Resource: "*"
    events:
      - sns: auto-remediate-config-compliance-${self:provider.stage}
  AutoRemediateDLQ:
    handler: auto-remediate-dlq.lambda_handler.lambda_handler
    name: auto-remediate-dlq-${self:provider.stage}
    description: Auto Remediate DLQ retries failed remediation attempts
    memorySize: 128
    timeout: 300
    package:
      exclude:
        - auto-remediate/**
        - auto-remediate-setup/**
    environment:
      DLQNAME: auto-remediate-dlq-${self:provider.stage}
      LAMBDANAME: auto-remediate-${self:provider.stage}
      LOGLEVEL: ${self:custom.log_level}
      PYTHONPATH: "/var/task/auto-remediate-dlq:/var/runtime"
    iamRoleStatements:
      - Effect: Allow
        Action:
          - lambda:InvokeFunction
          - sqs:DeleteMessage
          - sqs:GetQueueUrl
          - sqs:ReceiveMessage
        Resource: "*"
    events:
      - schedule:
          rate: rate(30 minutes)
          enabled: true
  AutoRemediateSetup:
    handler: auto-remediate-setup.lambda_handler.lambda_handler
    name: auto-remediate-setup-${self:provider.stage}
    description: Auto Remediate Setup Config creates CloudFormation Stacks for AWS Config
    memorySize: 128
    timeout: 300
    package:
      exclude:
        - auto-remediate/**
        - auto-remediate-dlq/**
    environment:
      LOGLEVEL: ${self:custom.log_level}
      PYTHONPATH: "/var/task/auto-remediate-setup:/var/runtime"
      SETTINGSTABLE: auto-remediate-settings-${self:provider.stage}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:BatchWriteItem
          - dynamodb:DeleteTable
          - dynamodb:DescribeTable
          - dynamodb:GetItem
          - dynamodb:ListTables
          - dynamodb:PutItem
          - dynamodb:Scan
        Resource: "*"
      - Effect: Allow
        Action:
          - cloudformation:CreateStack
          - cloudformation:ListStacks
        Resource: "*"
      - Effect: Allow
        Action:
          - config:PutConfigRule
        Resource: "*"

resources:
  Resources:
    DynamoDBSettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auto-remediate-settings-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CloudWatchComplianceEvent:
      Type: AWS::Events::Rule
      Properties:
        Name: auto-remediate-config-compliance-only-${self:provider.stage}
        EventPattern: "{\"source\":[\"aws.config\"],\"detail-type\":[\"Config Rules Compliance Change\"]}"
        State: ENABLED
        Targets:
          - Arn: 
              Fn::Join:
                - ":"
                - - arn
                  - aws
                  - sns
                  - ${self:custom.region}
                  - Ref: AWS::AccountId
                  - auto-remediate-compliance-${self:provider.stage}
            Id: Id12345
    SNSdlqTopic:
       Type: AWS::SQS::Queue
       Properties:
          QueueName: auto-remediate-dlq-${self:provider.stage}
    

plugins:
  - serverless-iam-roles-per-function
  - serverless-python-requirements